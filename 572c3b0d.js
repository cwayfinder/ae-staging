import{c as e,_ as t,p as i,q as o,a as n,L as r,h as a}from"./06e1fa4e.js";let s,d,p=e=>e,l=class extends r{constructor(){super(...arguments),this.cellSize=64}render(){return a(s||(s=p` <div class="top-bar ${0}"> <div class="player">Player ${0}</div> <div class="gold"> <img src="images/gold.svg" alt=""> ${0} </div> <button class="menu" @click="${0}"><img src="images/icons/menu.svg" alt=""></button> </div> <div class="container-1"> <div class="container-2"> <ae-battle-field></ae-battle-field> </div> </div> <div class="bottom-bar"> <div class="selected"></div> <div class="zoom"> <div class="item" @click="${0}"> <img src="images/icons/fit.svg" alt=""> </div> <div class="item" @click="${0}"> <img src="images/icons/plus.svg" alt=""> </div> <div class="item" @click="${0}"> <img src="images/icons/minus.svg" alt=""> </div> </div> <button class="end-turn" @click="${0}"><img src="images/icons/end-turn.svg" alt=""></button> </div> <ae-battle-menu .round="${0}"></ae-battle-menu> <ae-unit-store></ae-unit-store> <ae-unit-info></ae-unit-info> <ae-save-battle></ae-save-battle> <ae-new-turn></ae-new-turn> <ae-game-end></ae-game-end> <ae-story></ae-story> <ae-notification></ae-notification> <ae-conversation></ae-conversation> `),this.color,this.playerId+1,this.money,this.openMenu,this.zoomToFit,this.zoomIn,this.zoomOut,this.endTurn,this.round)}updated(){this.field.scrollIntoView({block:"center"})}openMenu(){this.menu.open()}centerToXY(e){this.container.scrollTo({top:e.y*this.field.cellSize-120,left:e.x*this.field.cellSize-120,behavior:"smooth"})}openNewTurnPopup(e){return new Promise((t=>{this.newTurn.open(e),this.newTurn.addEventListener("new-turn-close",(()=>t()))}))}openStory(e){return new Promise((t=>{this.story.open(e),this.story.addEventListener("story-next",(()=>t()))}))}openNotification(e){return new Promise((t=>{this.notification.open(e),this.notification.addEventListener("notification-close",(()=>t()))}))}openConversation(e){return new Promise((t=>{this.conversation.open(e),this.conversation.addEventListener("conversation-close",(()=>t()))}))}openGameEnd(e){return new Promise((t=>{this.gameEnd.open(e),this.gameEnd.addEventListener("game-end-close",(()=>t()))}))}openPopup(e,t){if("story"===e)return this.openStory(t);if("briefing"===e)return this.openConversation(t);if("simple-notification"===e)return this.openNotification(t);if("win-or-defeat"===e)return this.openGameEnd(t);throw new Error("Unknown popup type")}zoomToFit(){this.field.fitSize(),this.preventAnimations()}zoomIn(){this.field.cellSize+=8,this.preventAnimations()}zoomOut(){this.field.cellSize-=8,this.preventAnimations()}preventAnimations(){this.classList.add("stop-animations"),setTimeout((()=>this.classList.remove("stop-animations")),50)}endTurn(){this.dispatchEvent(new CustomEvent("end-turn"))}};l.styles=e(d||(d=p`:host{display:grid;grid-template-rows:auto 1fr auto;position:fixed;top:0;left:0;width:100%;height:100%;background:#242a45}.top-bar{height:48px;display:flex;justify-content:space-between;align-items:center;padding:0 16px;font-style:normal;font-weight:400;font-size:20px;line-height:26px;color:#fff}.top-bar.red{background:#e01d65}.top-bar.blue{background:#4195e6}.top-bar.green{background:#01ad32}.top-bar.black{background:#323232}.gold{display:flex;align-items:center}.gold img{margin-right:8px}button{width:40px;height:40px;background:0 0;border-radius:8px;border:2px solid #fff;box-sizing:border-box;outline:0;cursor:pointer;font-style:normal;font-weight:400;font-size:20px;line-height:26px;display:flex;align-items:center;justify-content:center;color:#fff}button img{width:24px;height:24px}.bottom-bar{height:64px;display:flex;justify-content:space-between;align-items:center;padding:0 16px}.zoom{display:grid;grid-auto-flow:column;grid-gap:12px}.zoom .item{width:32px;height:32px;background:#100a17;border-radius:50%;display:flex;justify-content:center;align-content:center;cursor:pointer;border:1px solid #c5c2c8;z-index:100;box-sizing:border-box}.zoom .item img{width:16px}.container-1{width:100%;height:100%;overflow:auto;display:grid;grid-template-rows:minmax(8px,1fr) auto minmax(8px,1fr)}.container-1::after,.container-1::before{content:''}.container-2{display:grid;grid-template-columns:minmax(8px,1fr) auto minmax(8px,1fr)}.container-2::after,.container-2::before{content:''}`)),t([i({type:Number})],l.prototype,"playerId",void 0),t([i({type:Number})],l.prototype,"money",void 0),t([i({type:String})],l.prototype,"color",void 0),t([i({type:Number})],l.prototype,"round",void 0),t([i({type:Number})],l.prototype,"cellSize",void 0),t([o(".container-1")],l.prototype,"container",void 0),t([o("ae-battle-field")],l.prototype,"field",void 0),t([o("ae-battle-menu")],l.prototype,"menu",void 0),t([o("ae-unit-store")],l.prototype,"unitStore",void 0),t([o("ae-unit-info")],l.prototype,"unitInfo",void 0),t([o("ae-save-battle")],l.prototype,"save",void 0),t([o("ae-new-turn")],l.prototype,"newTurn",void 0),t([o("ae-game-end")],l.prototype,"gameEnd",void 0),t([o("ae-story")],l.prototype,"story",void 0),t([o("ae-notification")],l.prototype,"notification",void 0),t([o("ae-conversation")],l.prototype,"conversation",void 0),l=t([n("ae-battle")],l);
