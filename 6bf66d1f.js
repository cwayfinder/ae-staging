import{d as e,a as t}from"./eeb3eefa.js";window.rating=new class{constructor(e,t,i){this.unitService=e,this.repo=t,this.battleService=i}rate(i){const r=i[0].unit.ownerId,a=this.unitService.getEnemyPossibleCaptures(r);this.threat=this.unitService.getPlayerThreat(r),i.forEach((i=>{i.actions.forEach((s=>{s.rateFactors={};const l=s.cell,o=i.unit,n=s.data;if("move"===s.type){const e=o.cell;o.cell=s.cell;const t=this.unitService.getEnemyPossibleCaptures(r);o.cell=e;const i=a.castle||0,l=t.castle||0;l<i?s.rateFactors.captures=20:l>i&&(s.rateFactors.captures=-10)}if(["remain","move"].includes(s.type)){const t=this.battleService.getArmorByXY(l),i=this.repo.getBuilding({cell:l}),r=this.repo.getBuilding({cell:l,healing:o.ownerId}),a=this.repo.getBuilding({cell:l,enemy:o.ownerId}),n=o.defaultHealth/100*(o.defaultHealth-o.health),c=this.getThreatAtCell(l);if(c?(s.rateFactors.threat=-.05*c,n&&(s.rateFactors.threatForWounded=c*(n/100*-.1)),s.rateFactors.defBonus=t,s.rateFactors.building=i?1:0,s.rateFactors.enemyBuilding=a?5:0,r&&(s.rateFactors.healingBuilding=n?10:5)):(s.rateFactors.defBonus=t/5,s.rateFactors.building=i?1:0),n&&(r&&(s.rateFactors.heal=Math.min(n,r.healthUp)),n>50||o.abilities.includes("commander")&&n>40)){const t=this.repo.getBuildings({healing:o.ownerId}).filter((e=>!this.repo.getUnit({cell:e.cell}))).reduce(((t,i)=>Math.min(t,e(l,i.cell))),Number.POSITIVE_INFINITY);s.rateFactors.distanceToHealing=-1*t}if(n<50){const t=[];if(o.abilities.includes("castleCaptor")){const e=this.repo.getBuildings({type:"castle",neutralOrEnemy:o.ownerId});t.push(...e)}if(o.abilities.includes("villageCaptor")){const e=this.repo.getBuildings({type:"castle",neutralOrEnemy:o.ownerId});t.push(...e)}if(o.abilities.includes("destroyer")){const e=this.repo.getBuildings({type:"farm",enemy:o.ownerId});t.push(...e)}const i=this.repo.getUnits({enemy:o.ownerId});t.push(...i);const r=t.reduce(((t,i)=>Math.min(t,e(l,i.cell))),Number.POSITIVE_INFINITY);s.rateFactors.distanceToTarget=r*(c?-.05:-2)}}else if("raise-skeleton"===s.type)s.rateFactors.raise=50;else if("attack"===s.type){const e=this.repo.getUnit({cell:l});if(!e)throw new Error(`No unit found at cell {x: ${l.x}, y: ${l.y}`);if(s.data.enemyUnit=e,n.killProbability>=.4)s.rateFactors.kill=(e.cost+e.health)*n.killProbability/5;else if(n.suicideProbability>.2)s.rateFactors.suicide=100*-n.suicideProbability;else{const e=t(n.dmg);n.responseDmg&&(s.rateFactors.revenge=-.5*t(n.responseDmg)),s.rateFactors.dmg=1.4*e}}else if("destroy-building"===s.type){this.repo.getBuilding({cell:l,enemy:o.ownerId})&&(s.rateFactors.enemyBuilding=50)}else if("occupy-building"===s.type){const e=this.repo.getBuilding({cell:l});if(!e)throw new Error(`No building found at cell {x: ${l.x}, y: ${l.y}`);s.rateFactors.buildingType="castle"===e.type?100:40}else"fix-building"===s.type&&(s.rateFactors.buildingType=20);s.rate=Object.values(s.rateFactors).reduce(((e,t)=>e+t),0)})),i.rate=i.actions.reduce(((e,t)=>e+t.rate),0)}))}getThreatAtCell(e){const t=this.threat.get(e);return t?t.reduce(((e,t)=>e+t.avg),0):0}}(window.unitService,window.battleRepository,window.battleService);
