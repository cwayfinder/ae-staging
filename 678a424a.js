import{c as t}from"./d1ada6f5.js";import{c as e,_ as s,p as i,i as a,a as n,L as o,h as l}from"./5b7dc6e2.js";let c,r,p,h,d=t=>t,g=class extends o{constructor(){super(...arguments),this.options=[],this.selected=0}render(){var t;const e=this.options[this.selected];return l(c||(c=d` <img class="prev" src="assets/ui/icons/arrow-left.png" alt="" @click="${0}"> <div class="content"> ${0} <div class="label">${0}</div> </div> <img class="next" src="assets/ui/icons/arrow-right.png" alt="" @click="${0}"> `),this.prev,e.icon?l(r||(r=d`<img src="assets/ui/icons/${0}.png" alt="">`),null===(t=this.options[this.selected])||void 0===t?void 0:t.icon):l(p||(p=d``)),e.label,this.next)}updated(t){this.selected=this.options.findIndex((t=>t.value==this.value))||0}next(){this.selected=(this.selected+1)%this.options.length,this.value=this.options[this.selected].value,this.emitValueChangeEvent()}prev(){this.selected=(this.options.length+this.selected-1)%this.options.length,this.value=this.options[this.selected].value,this.emitValueChangeEvent()}emitValueChangeEvent(){this.dispatchEvent(t("picker-value-change",{value:this.options[this.selected].value}))}};g.styles=e(h||(h=d`:host{display:grid;grid-template-columns:auto auto auto;grid-gap:8px;align-items:center}.content{background-image:url(assets/ui/picker-pad.png);width:116px;height:29px;display:grid;grid-auto-flow:column;align-items:center;justify-content:center;grid-gap:8px}.label{font-family:Changa;font-style:normal;font-weight:700;font-size:16px;line-height:29px;text-align:center;text-transform:capitalize;color:#fffbde}.next,.prev{cursor:pointer}`)),s([i({type:Array})],g.prototype,"options",void 0),s([i({type:String})],g.prototype,"value",void 0),s([a()],g.prototype,"selected",void 0),g=s([n("ae-picker")],g);
