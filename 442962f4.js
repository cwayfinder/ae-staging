import{c as i,_ as s,p as t,a as e,L as a,h as d}from"./f0da52c9.js";let l,n,o,r,c,v,p,u=i=>i,g=class extends a{render(){return this.unit?d(n||(n=u` <div class="backdrop" @click="${0}"></div> <div class="unit-info"> <div class="image" style="background-image:url(assets/images/unit/unit-${0}-${0}.png)"></div> <div class="name">${0}</div> <div class="stats"> <div class="item"> <img src="assets/images/ui/atk.svg" alt=""> ${0}-${0} </div> <div class="item"> <img src="assets/images/ui/def.svg" alt=""> ${0}+${0} </div> <div class="item"> <img src="assets/images/ui/mov.svg" alt=""> ${0} </div> </div> <div class="level"> <div class="progress"> <div class="icon"> <img src="assets/images/ui/level-up.svg" alt=""> </div> <div class="bar"> <div class="fill"> ${0}% </div> </div> </div> <div class="label">Level ${0}</div> </div> <div class="health"> <div class="progress"> <div class="icon"> <img src="assets/images/ui/heart.svg" alt=""> </div> <div class="bar"> <div class="fill"></div> </div> </div> <div class="label">${0}/${0}</div> </div> <div class="description">${0}</div> <div class="abilities"> <div class="header">Abilities</div> ${0} </div> <div class="effects"> <div class="header">Effects</div> ${0} </div> </div> `),this.close,this.unit.type,this.unit.color,this.unit.name,this.unit.atk.min,this.unit.atk.max,this.unit.def,this.unit.cellDef,this.unit.mov,Math.floor((this.unit.xp-this.unit.xpForCurrentLevel)/this.unit.xpForNextLevel*100),this.unit.level,this.unit.health,this.unit.maxHealth,this.unit.description,this.unit.abilities.map((i=>d(o||(o=u` <div class="item"> <span class="label">${0}</span> - <span class="label">${0}</span> </div> `),i.label,i.description))),this.unit.effects.length?this.unit.effects.map((i=>{var s,t;return d(r||(r=u` <div class="item"> <span class="label">${0}</span> ${0} - <span class="label">${0}</span> </div> `),i.label,(null===(s=i.data)||void 0===s?void 0:s.rounds)?d(c||(c=u`(${0})`),this.formatRounds(null===(t=i.data)||void 0===t?void 0:t.rounds)):"",i.description)})):d(v||(v=u` <div class="none">None</div>`))):d(l||(l=u``))}close(){this.remove()}formatRounds(i){return`${i} round${i>1?"s":""}`}};g.styles=i(p||(p=u`:host{display:grid;grid-template-rows:auto;align-content:center;position:fixed;top:0;left:0;width:100%;height:100%;z-index:100;padding-top:80px;box-sizing:border-box}.backdrop{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.5)}.unit-info{background:#100a17;padding:16px;margin:8px;border-radius:8px;z-index:1}.unit-info .image{height:48px;width:48px;background-size:cover}.unit-info .stats{display:grid;grid-auto-flow:column;justify-content:start;grid-gap:24px}.unit-info .stats .item{display:flex;align-items:center}.unit-info .stats .item img{margin-right:8px;height:24px}.cancel{position:absolute;bottom:24px;right:24px;height:40px;padding:0 16px;background:radial-gradient(50% 50% at 50% 50%,#44325c 21.07%,#2a1f38 100%);border-radius:8px;border:2px solid #c5c2c8;box-sizing:border-box;outline:0;cursor:pointer;font-style:normal;font-weight:400;font-size:20px;line-height:26px;display:flex;align-items:center;justify-content:center;color:#fff}.abilities,.description,.effects{margin:12px 0}.abilities .header,.effects .header{font-size:120%;margin-bottom:4px}`)),s([t({type:Object})],g.prototype,"unit",void 0),g=s([e("ae-unit-info")],g);
