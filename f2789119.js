import{u as e}from"./8b91577e.js";import{B as t}from"./dbbb96b8.js";window.apiService=new class{constructor(e,t,i,n,r,s,o,c,l,a,h){this.repo=e,this.battleService=t,this.crudService=i,this.eventService=n,this.pathFinder=r,this.scriptingService=s,this.selectionService=o,this.unitActionExecutor=c,this.battleConfigurationService=l,this.unitStoreService=a,this.unitService=h}async startMission(e,t){await this.battleConfigurationService.startMission(e,t),this.scriptingService.checkTriggers()}save(e){this.battleConfigurationService.save(e)}suggestSaveName(){return this.battleConfigurationService.suggestSaveName()}restart(){this.battleConfigurationService.restart(),this.battleConfigurationService.init()}endTurn(){this.selectionService.selectUnit(null),"ai"!==this.repo.getActivePlayer().type&&this.autoSave(),this.decrementGravesTtl(),this.repo.getUnits().forEach((e=>this.resetUnitState(e))),this.decrementPoisonCount(),this.activateNextPlayer(),this.startTurn()}autoSave(){this.battleConfigurationService.removeExistingAutoSave();const e=this.repo.getBattle();this.save(e.i18n.en.name+" - auto")}startTurn(){const e=this.repo.getActivePlayer(),i=this.repo.getBattle().round;let n=0;i>1&&(n=this.collectIncome(),this.crudService.updatePlayer(e.id,{money:e.money+n})),this.eventService.emitEvent(new t("battle","start-turn",{player:e,round:i,income:n})),i>1&&this.healthByBuildings(),this.scriptingService.checkTriggers()}decrementGravesTtl(){this.repo.getGraves().forEach((e=>{this.crudService.updateGrave(e.id,{ttl:e.ttl-1}),0===e.ttl&&this.crudService.removeGrave(e.id)}))}resetUnitState(e){this.crudService.updateUnit(e.id,{isActive:!0,didMove:!1,didAttack:!1,gotBuilding:!1,fixedBuilding:!1})}decrementPoisonCount(){this.repo.getUnits().forEach((e=>{const t=e.effects.find((e=>"poisoned"===e.type));if(t){const i=t.data.rounds;i>1?this.crudService.updateUnitEffect(e.id,"poisoned",{rounds:i-1}):this.crudService.removeUnitEffect(e.id,"poisoned")}}))}activateNextPlayer(){const e=this.repo.getPlayers(),t=this.repo.getBattle();let i=(e.findIndex((e=>e.id===t.activePlayerId))+1)%e.length;const n=this.repo.getPlayers()[i];this.repo.updateBattle({activePlayerId:n.id}),0===i&&this.crudService.updateBattle({round:t.round+1}),n.defeated&&this.activateNextPlayer()}collectIncome(){const e=this.repo.getActivePlayer();return this.repo.getBuildings({ownerId:e.id}).reduce(((e,t)=>e+(t.earn||0)),0)}healthByBuildings(){this.repo.getUnits().filter((e=>e.ownerId===this.repo.getBattle().activePlayerId)).forEach((e=>{this.healthUpByBuilding(e)}))}healthUpByBuilding(e){const t=this.repo.getBuildingHeal({cell:e.cell,playerId:e.ownerId});if(t){let i=e.defaultHealth-e.health;i=Math.min(i,t),i&&this.crudService.updateUnit(e.id,{health:e.health+i})}}getUnitInfo(t){const i=this.repo.getUnit({id:t});if(!i)throw new Error(`Unit with id ${t} not found`);const n=this.repo.getPlayer({id:i.ownerId}),r=i.level,s=Math.min(r+1,i.levelList.length-1),o=i.levelList[r],c=i.levelList[s],l=e[i.type];return{type:i.type,name:l.i18n.en.name,description:l.i18n.en.description,color:n.color,atk:i.atk,def:i.def,cellDef:this.battleService.getDefByTerrain(i),mov:i.mov,health:i.health,maxHealth:i.defaultHealth,level:r,nextLevel:s,xp:i.xp,xpForCurrentLevel:o,xpForNextLevel:c}}click(e){const t=null===this.selectionService.unitId?null:this.repo.getUnit({id:this.selectionService.unitId}),i=this.selectionService.unitActions,n=this.repo.getActivePlayer(),r=i.find((t=>t.cell.x===e.x&&t.cell.y===e.y)),s=this.repo.getUnit({cell:e}),o=this.repo.getBuilding({cell:e});if(r&&"remain"!==r.type)this.selectionService.selectUnit(null),this.executeUnitAction(t,r);else if(s&&s.id===(null==t?void 0:t.id)&&o&&"castle"===o.type&&o.ownerId===n.id)this.selectionService.selectUnit(null),this.openStore(e);else{const r=i.find((e=>"undo-move"===e.type));if(r&&(this.selectionService.selectUnit(null),this.executeUnitAction(t,r)),s&&s.isActive&&s.ownerId===n.id){const t=[];o&&"castle"===o.type&&o.ownerId===n.id&&t.push({cell:e,type:"open-store"}),this.selectionService.selectUnit(s.id,t)}else o&&"castle"===o.type&&o.ownerId===n.id?(this.openStore(e),this.selectionService.selectUnit(null)):this.selectionService.selectUnit(null)}}executeUnitAction(e,t){this.unitActionExecutor.execute(e,t),["move","undo-move"].includes(t.type)||(this.scriptingService.checkTriggers(),"skirmish"===this.repo.getBattle().type&&this.scriptingService.checkPlayerDefeat())}openStore(e){this.eventService.emitEvent(new t("battle","open-store",{storeCell:e}))}reviveUnit(e,t){this.unitStoreService.reviveUnit(e,t)}purchaseUnit(e,t){this.unitStoreService.buyUnit(e,t)}getStoreData(e){return{tooMany:this.unitStoreService.isUnitsTooMuch(),player:this.repo.getActivePlayer(),purchasableUnits:this.unitStoreService.getPurchasableUnits(),revivableUnits:this.unitStoreService.getRevivableUnits()}}getPotentialAttackActions(e){return this.unitService.getPotentialAttackActions(e)}init(){this.battleConfigurationService.init()}}(window.battleRepository,window.battleService,window.crudService,window.eventService,window.pathFinder,window.scriptingService,window.selectionService,window.unitActionExecutor,window.battleConfigurationService,window.unitStoreService,window.unitService);
