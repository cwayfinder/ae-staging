import{u as e,a as t,d as i}from"./43d81f17.js";window.unitStoreService=new class{constructor(e,t,i,n){this.repo=e,this.crudService=t,this.battleService=i,this.selectionService=n}buyUnit(e,t){e.id?this.reviveUnit(e.id,t):this.purchaseUnit(e.type,t)}reviveUnit(e,t){const i=this.repo.getActivePlayer();if(this.repo.getUnits({ownerId:i.id}).length>=i.unitLimit)throw new Error("Player units limit reached");const n=this.repo.getUnit({id:e,dead:!0});if(n.cost>i.money)throw new Error(`Player ${i.id} doesn't have enough money to revive unit ${n.id}`);this.crudService.updatePlayer(i.id,{money:i.money-n.cost}),this.crudService.updateUnit(n.id,{dead:!1,cell:this.battleService.getClosestAvailableCell(t)}),this.selectionService.selectUnit(n.id)}purchaseUnit(t,i){const n=this.repo.getActivePlayer();if(this.repo.getUnits({ownerId:n.id}).length>=n.unitLimit)throw new Error("Player units limit reached");const r=e[t];if(r.cost>n.money)throw new Error(`Player ${n.id} doesn't have enough money to purchase unit ${t}`);this.crudService.updatePlayer(n.id,{money:n.money-r.cost});const s=this.crudService.addUnit({type:t,ownerId:n.id,cell:i});this.selectionService.selectUnit(s.id)}getRevivableUnits(){const i=this.repo.getActivePlayer();return this.repo.getUnits({ownerId:i.id,dead:!0}).map((i=>{const n=e[i.type],r=i.abilities.map((e=>t[e].i18n.en));return{id:i.id,type:i.type,cost:i.cost,name:n.i18n.en.name,description:n.i18n.en.description,atk:i.atk,def:i.def,mov:i.mov,abilities:r}}))}getPurchasableUnits(){const n=[],r=this.repo.getActivePlayer();if(!this.repo.getUnits({ownerId:r.id},!0).find((e=>e.abilities.includes("commander")))){const i=this.repo.preferences.players.find((e=>e.id===r.id)),s=null==i?void 0:i.commander,o=e[s],c=o.abilities.map((e=>t[e].i18n.en));n.push({type:o.langKey,cost:o.cost,name:o.i18n.en.name,description:o.i18n.en.description,atk:o.atk,def:o.def,mov:o.mov,abilities:c})}const s=(this.repo.getBattle().purchasableUnits||i).map((i=>{const n=e[i],r=n.abilities.map((e=>t[e].i18n.en));return{type:n.langKey,cost:n.cost,name:n.i18n.en.name,description:n.i18n.en.description,atk:n.atk,def:n.def,mov:n.mov,abilities:r}}));return n.push(...s),n}isUnitsTooMuch(){const{width:e,height:t}=this.repo.getBattle().size,i=Math.round(t*e/2);return i+i%this.repo.getPlayers().length<=this.repo.getUnits().length}}(window.battleRepository,window.crudService,window.battleService,window.selectionService);
