import{c as e,_ as t,p as s,q as i,a as n,L as o,h as l}from"./06e1fa4e.js";let h,d,a=e=>e,r=class extends o{constructor(){super(...arguments),this.doubleClickDelay=200,this.singleClickPrevent=!1,this.longPressDelay=600,this.handleClick=e=>{this.doubleClickTimer=setTimeout((()=>{this.singleClickPrevent||this.dispatchEvent(new CustomEvent("single-click",{detail:this.getCell(e)})),this.singleClickPrevent=!1}),this.doubleClickDelay)},this.handleDoubleClick=e=>{clearTimeout(this.doubleClickTimer),this.singleClickPrevent=!0,this.dispatchEvent(new CustomEvent("double-click",{detail:this.getCell(e)}))},this.handleMouseDown=e=>{this.singleClickPrevent=!1,this.longPressTimer=window.setTimeout((()=>{this.getMoveOffset(e)<10&&(this.dispatchEvent(new CustomEvent("long-press",{detail:this.getCell(e)})),this.singleClickPrevent=!0)}),this.longPressDelay)},this.handleMouseMove=e=>{this.lastMoveEvent=e},this.handleMouseUp=()=>{clearTimeout(this.longPressTimer)}}render(){return l(h||(h=a``))}connectedCallback(){super.connectedCallback(),this.addEventListener("click",this.handleClick),window.addEventListener("dblclick",this.handleDoubleClick),window.addEventListener("mousedown",this.handleMouseDown),window.addEventListener("touchstart",this.handleMouseDown),window.addEventListener("mouseup",this.handleMouseUp),window.addEventListener("touchend",this.handleMouseUp),window.addEventListener("mousemove",this.handleMouseMove),window.addEventListener("touchmove",this.handleMouseMove)}disconnectedCallback(){window.removeEventListener("click",this.handleClick),window.removeEventListener("dblclick",this.handleDoubleClick),window.removeEventListener("mousedown",this.handleMouseDown),window.removeEventListener("touchstart",this.handleMouseDown),window.removeEventListener("mouseup",this.handleMouseUp),window.removeEventListener("touchend",this.handleMouseDown),window.removeEventListener("mousemove",this.handleMouseMove),window.removeEventListener("touchmove",this.handleMouseMove),super.disconnectedCallback()}getCell(e){let t=this.getXY(e);return{x:Math.floor(t.x/this.cellSize),y:Math.floor(t.y/this.cellSize)}}getXY(e){let t,s;if(e.touches){const i=this.getBoundingClientRect();t=e.touches[0].clientX-i.x,s=e.touches[0].clientY-i.y}else{const i=this.getBoundingClientRect();t=e.clientX-i.x,s=e.clientY-i.y}return{x:t,y:s}}getMoveOffset(e){if(!this.lastMoveEvent)return 0;const t=this.getXY(e),s=this.getXY(this.lastMoveEvent);return Math.abs(t.x-s.x)+Math.abs(t.y-s.y)}};r.styles=e(d||(d=a`:host{display:block;position:absolute;left:0;right:0;top:0;bottom:0;z-index:9}`)),t([s({type:Number})],r.prototype,"cellSize",void 0),t([i("ae-active-cell")],r.prototype,"active",void 0),t([i(".markers")],r.prototype,"markers",void 0),r=t([n("ae-event-handler-layer")],r);
