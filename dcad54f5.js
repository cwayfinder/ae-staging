import{C as e}from"./bedfe3bf.js";class t{constructor(e){this.repo=e,this.resistance={terra:1,road:1,bridge:1,hill:2,forest:2,stone:3,water:3}}init(){this.terrain=this.setTerrainType(this.repo.getTerrains());const e=this.repo.getBattle().size;this.bounds={minX:0,minY:0,maxX:e.width-1,maxY:e.height-1}}setTerrainType(e){const t={};for(const[s,i]of Object.entries(e))t[s]=i.replace(/\-\d+$/,"");return t}getReachableCells({start:t,range:s,moveType:i,obstacles:n=[]}){const r=new e,a=({x:e,y:t},s,n)=>{const r=this.terrain[`x${e}y${t}`],a=this.getPathResistance(r,i);s>=a&&o({x:e,y:t},s-a,n)},o=(e,t,s)=>{const i=r.get(e);(!i||i.distance<t)&&(s=[...s,e],r.set(e,{distance:t,path:s}),this.getSiblingCells(e).filter((({x:e,y:t})=>!n.includes(`x${e}y${t}`))).forEach((e=>a(e,t,s))))};return o(t,s-1,[]),r.remove(t),r.entries().map((([e,{path:t}])=>({cell:e,path:t})))}getSiblingCells({x:e,y:t}){return[{x:e-1,y:t},{x:e+1,y:t},{x:e,y:t-1},{x:e,y:t+1}].filter((e=>this.isCellInBounds(e)))}isCellInBounds({x:e,y:t}){return e<=this.bounds.maxX&&e>=this.bounds.minX&&t<=this.bounds.maxY&&t>=this.bounds.minY}getPathResistance(e,t){switch(t){case"walk":return this.resistance[e];case"flow":return"water"===e?1:this.resistance[e];default:return 1}}}window.PathFinder=t,window.pathFinder=new t(window.battleRepository);
